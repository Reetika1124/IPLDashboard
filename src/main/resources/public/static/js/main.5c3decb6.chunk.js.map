{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","pages/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c3decb6.chunk.js","sourcesContent":["import './MatchDetailCard.scss';\nimport { React } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport const MatchDetailCard = ({teamName, match}) => {\n\tif(!match) return null;\n\tconst otherTeam = match.team1 === teamName ?match.team2 : match.team1;\n\tconst otherTeamRoute = `/teams/${otherTeam}`\n\tconst isMatchWon = teamName ===match.matchWinner;\n\t\n\treturn (\n\t\t<div className={isMatchWon ? \"MatchDetailCard won-card\" : \"MatchDetailCard lost-card\"}>\n\t\t\t<div>\n\t\t\t\t<span className=\"vs\">vs</span>\n\t\t\t\t<h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n\t\t\t\t<h2 className=\"match-date\">{match.date}</h2>\n\t\t\t\t<h3 className=\"match-venue\">at {match.venue}</h3>\n\t\t\t\t<h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n\t\t\t</div>\n\t\t\t<div className=\"additional-detail\">\n\t\t\t\t<h3>First Innings</h3>\n\t\t\t\t<p>{match.team1}</p>\n\t\t\t\t<h3>Second Innings</h3>\n\t\t\t\t<p>{match.team2}</p>\n\t\t\t\t<h3>Man of the match</h3>\n\t\t\t\t<p>{match.playerOfMatch}</p>\n\t\t\t\t<h3>Umpires</h3>\n\t\t\t\t<p>{match.umpire1}, {match.umpire2}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import './MatchSmallCard.scss';\nimport { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const MatchSmallCard = ({ teamName, match }) => {\n\tconst otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n\tconst otherTeamRoute = `/teams/${otherTeam}`\n\tconst isMatchWon = teamName === match.matchWinner;\n\t\n\treturn (\n\t\t<div className={isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"}>\n\t\t\n\t\t\t\t<span className=\"vs\">vs</span>\n\t\t\t\t<h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n\t\t\t<p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n\t\t</div>\n\t);\n}","import './TeamPage.scss';\nimport { React, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport const TeamPage = () => {\n\n\tconst [team, setTeam] = useState({ matches: [] });\n\tconst { teamName } = useParams();\n\n\tuseEffect(\n\n\t\t() => {\n\t\t\tconst fetchMatches = async () => {\n\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetTeam(data);\n\n\t\t\t};\n\n\t\t\tfetchMatches();\n\t\t}, [teamName]\n\t);\n\n\tif (!team || !team.teamName) {\n\t\treturn <h1>Team not found</h1>\n\t}\n\treturn (\n\t\t<div className=\"TeamPage\">\n\t\t\t<div className=\"team-name-section\">\n\t\t\t\t<h1 className=\"team-name\">{team.teamName}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"win-loss-section\">\n\t\t\t\tWins / Losses\n\t\t\t\t<PieChart\n\t\t\t\t\tdata={[\n\t\t\t\t\t\t{ title: 'Losses', value: team.totalMatches-team.totalWins, color: '#890416' },\n\t\t\t\t\t\t{ title: 'Wins', value: team.totalWins, color: '#407e12' }\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"match-detail-section\">\n\t\t\t\t<h3>Latest Matches</h3>\n\t\t\t\t<MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\n\t\t\t</div>\n\n\t\t\t{team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\n\n\t\t\t<div className=\"more-link\">\n\t\t\t<Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'}</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './YearSelector.scss';\n\nexport const YearSelector = ({teamName}) => {\n\n\tlet years = [];\n\tconst startYear = process.env.REACT_APP_DATA_START_YEAR;\n\tconst endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n\tfor (let i = startYear; i <= endYear; i++) {\n\t\tyears.push(i);\n\t}\n\n\treturn (\n\t\t<ol className=\"YearSelector\">\n\t\t\t{\n\t\t\t\tyears.map(year => (\n\t\t\t\t\t<li  key={year}>\n\t\t\t\t\t\t<Link to={`${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}/matches/${year}`}>{year}</Link>\n\t\t\t\t\t</li>\n\n\t\t\t\t)\n\t\t\t)}\n\t\t</ol>\n\t)\n}\n","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss';\nexport const MatchPage = () => {\n\n\tconst [matches, setMatches] = useState([]);\n\tconst { teamName, year } = useParams();\n\n\tuseEffect(\n\n\t\t() => {\n\t\t\tconst fetchMatches = async () => {\n\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetMatches(data);\n\n\t\t\t};\n\n\t\t\tfetchMatches();\n\t\t}, [teamName, year]\n\t);\n\n\n\treturn (\n\t\t<div className=\"MatchPage\">\n\t\t\n\t\t\t<div className=\"year-selector\">\n\t\t\t<h3>Select Year</h3>\n               <YearSelector teamName={teamName}/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n\t\t\t\t{\n\t\t\t\t\tmatches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { React } from 'react';\nimport { Link } from 'react-router-dom'\nimport './TeamTile.scss';\nexport const TeamTile = ({ teamName }) => {\n\n\treturn (\n\t\t<div className=\"TeamTile\">\n\t\t\t<h1 className=\"text\">\n\t\t\t\t<Link to={`${process.env.REACT_APP_API_ROOT_URL}/teams/${teamName}`}>{teamName}</Link>\n\t\t\t</h1>\n\t\t</div>\n\t)\n\n\n}","import './HomePage.scss';\nimport { React, useEffect, useState } from 'react';\nimport { TeamTile } from '../pages/TeamTile';\nexport const HomePage = () => {\n\n\tconst [teams, setTeams] = useState([]);\n\n\tuseEffect(\n\n\t\t() => {\n\t\t\tconst fetchAllTeams = async () => {\n\n\t\t\t\tconst response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetTeams(data);\n\n\t\t\t};\n\n\t\t\tfetchAllTeams();\n\t\t}, []\n\t);\n\n\n\treturn (\n\t\t<div className=\"HomePage\">\n\t\t\t<div className=\"header-section\">\n\t\t\t\t<h1 className=\"app-name\">IPL DashBoard</h1>\n\t\t\t</div>\n\t\t\t<div className=\"team-grid\">\n\t\t\t\t{teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/teams/:teamName/matches/:year\">\n\t\t\t\t\t\t<MatchPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/teams/:teamName\">\n\t\t\t\t\t\t<TeamPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t    <HomePage />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}